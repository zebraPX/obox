<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>oBoxCenter / 子元素居中</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui"/>
    <meta name="format-detection" content="telephone=no, email=no"/>
    <!--#include file="public/head.shtml"-->
    <style>
        .parent{height:600px;background:#e543ae}
        .self{width:400px;background:#3ca14d;font-size:32px;color:white;text-align: center}
        @media (max-width:1200px){
            .self{width:200px;}
            .parent{height:500px}
        }
    </style>
</head>
<body>
<!--#include file="public/header.shtml"-->
<!--START 主要内容-->
<h1>oBoxCenter / 子元素居中</h1>
    <div class="parent">
        <div class="self js_self">居中盒子</div>
    </div>
    <p>适用于父元素有明确高度,子元素居中显示需要居中显示情况（通常子元素有宽度,高度可根据内容自适应）</p>
    <p>效果类似框架中 直接 class 父元素"o_table"+子元素"o_cell" 的居中效果,js控制更加灵活可以实现更复杂布局的情况,复杂布局推荐</p>
    <pre>
        &lt;!--css--&gt;
        .parent{height:600px;background:#e543ae}
        .self{width:400px;background:#3ca14d;font-size:32px;color:white;text-align: center}
        @media (max-width:1200px){
            .self{width:200px;}
            .parent{height:500px}
        }

        &lt;!--html--&gt;
        &lt;div class=&quot;parent&quot;&gt;
                &lt;div class=&quot;self js_self&quot;&gt;居中盒子&lt;/div&gt;
            &lt;/div&gt;
    </pre>
     <pre>
         var selfCenger=$(".js_self").oBoxCenter();//创建方法
        selfCenger.init();//激活方法
     </pre>
<!-- END 主要内容-->
<!--#include file="public/footer.shtml"-->
<script>
    var selfCenger=$(".js_self").oBoxCenter();//创建方法
          selfCenger.init();//激活方法
</script>
</body>
</html>
